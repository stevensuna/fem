@use '../abstracts/variables' as v;
@use '../abstracts/mixins' as m;
@use 'sass:map';

.card {
  display: grid;
  grid-template-columns: 1fr;
  background: var(--color-white);
  border-radius: var(--card-border-radius);
  box-shadow: 0 map.get(v.$spacing, 200) map.get(v.$spacing, 400) rgba(201, 213, 225, 0.5);
  max-width: var(--card-max-width);
  overflow: hidden;
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  // Increase the card width to create a more rectangular appearance
  width: 100%;
  max-width: 60rem; // Increased from 45.625rem (730px) to 60rem (960px)

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 map.get(v.$spacing, 300) map.get(v.$spacing, 500) rgba(201, 213, 225, 0.6);
  }

  @include m.break-up(md) {
    // Adjust ratio to make the image wider at medium screens
    grid-template-columns: minmax(250px, 0.45fr) minmax(300px, 0.55fr);
  }

  @include m.break-up(lg) {
    // Further increase image width proportion on larger screens
    grid-template-columns: minmax(320px, 0.5fr) minmax(320px, 0.5fr);
  }

  @include m.break-up(xl) {
    // Fixed width columns for larger screens with wider image
    grid-template-columns: 380px 440px;
    max-width: 820px; // Adjust overall card width to maintain proportion
  }

  &__image {
    height: calc(map.get(v.$spacing, 800) * 3);
    
    @include m.break-up(md) {
      height: 100%;
    }

    @include m.break-up(lg) {
      height: 100%;
      min-height: calc(map.get(v.$spacing, 1400) * 2.75); // Slightly taller
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &__content {
    padding: map.get(v.$spacing, 300);
    position: relative;
    display: flex;
    flex-direction: column;

    @include m.break-up(md) {
      padding: map.get(v.$spacing, 400);
    }

    @include m.break-up(lg) {
      padding: map.get(v.$spacing, 700);
    }

    @include m.break-up(xl) {
      padding: map.get(v.$spacing, 800) map.get(v.$spacing, 700);
    }
  }

  &__footer {
    display: flex;
    align-items: center;
    gap: map.get(v.$spacing, 200);
    margin-top: auto;
    padding-top: map.get(v.$spacing, 200);
    position: relative;

    @include m.break-up(lg) {
      padding-top: map.get(v.$spacing, 400);
      gap: map.get(v.$spacing, 300);
    }
  }
}

.user-info {
  display: flex;
  flex-direction: column;
  gap: map.get(v.$spacing, 100);

  @include m.break-up(lg) {
    gap: map.get(v.$spacing, 200);
  }
}