---
import Typography from './Typography.astro';
import Button from './Button.astro';

interface Feature {
  text: string;
  included: boolean;
}

interface Props {
  name: string;
  price: string;
  period?: string;
  description: string;
  features: Feature[];
  isPopular?: boolean;
  class?: string;
}

const { 
  name, 
  price, 
  period = 'month', 
  description,
  features,
  isPopular = false,
  class: className 
} = Astro.props;
---

<div class:list={[
  'relative bg-neutral-0 border-2 rounded-lg p-4 md:p-6',
  isPopular ? 'border-salmon-500' : 'border-neutral-900',
  className
]}>
  {isPopular && (
    <span class="absolute -top-3 left-6 bg-salmon-500 text-neutral-0 px-3 py-1 rounded-full text-caption">
      Most Popular
    </span>
  )}

  <div class="space-y-3 md:space-y-4">
    <div>
      <Typography variant="h3" as="h3">
        {name}
      </Typography>
      <Typography variant="body" class="text-neutral-700 mt-1">
        {description}
      </Typography>
    </div>

    <div>
      <Typography variant="h2" as="p" class="flex items-baseline">
        {price}
        <Typography as="span" variant="caption" class="text-neutral-700 ml-1">
          /{period}
        </Typography>
      </Typography>
    </div>

    <ul class="space-y-2">
      {features.map(feature => (
        <li class="flex items-start gap-2">
          <span class:list={[
            'mt-1 w-5 h-5 rounded-full flex items-center justify-center',
            feature.included ? 'bg-salmon-50 text-salmon-500' : 'bg-neutral-200 text-neutral-700'
          ]}>
            {feature.included ? '✓' : '×'}
          </span>
          <Typography variant="body" class="text-neutral-700">
            {feature.text}
          </Typography>
        </li>
      ))}
    </ul>

    <Button 
      variant={isPopular ? 'primary' : 'secondary'}
      size="lg"
      class="w-full"
    >
      Get Started
    </Button>
  </div>
</div>